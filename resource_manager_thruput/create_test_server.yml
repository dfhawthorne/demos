---
# ------------------------------------------------------------------------------
# Installs and configures an Oracle 19C database on DURAL as a test server
# ------------------------------------------------------------------------------

- name:                 "Creates a test database server on DURAL"
  hosts:                dural.yaocm.id.au
  tasks:
  
  - name:               "Sets global variables"
    set_fact:
      db_installer_loc: "/home/oracle/linuxamd64_193000"
      install_group:    "oinstall"
      inventory_location:
                        "/opt/app/oraInventory"
      oracle_base:      "/opt/app/oracle"
      oracle_home:      "/opt/app/oracle/product/19.3.0.2/database"
      patch_directory:  "/opt/share/Software/database/p31720396_190000_Linux-x86-64/31720396"
      sw_archive:       "/opt/share/Software/database/LINUX.X64_193000_db_home.zip"
      response_file:    "/home/oracle/db_install.rsp"
      osdba_group:      "dba"
      dataLocation:     "/opt/app/oracle/oradata"
      recoveryLocation: "/opt/app/oracle/recoveryarea"
      install_option:   "INSTALL_DB_AND_CONFIG"
      starterdb_type:   "GENERAL_PURPOSE"
      globalDBName:     "DEMOCDB19C.YAOCM.ID.AU"
      SID:              "DEMO19C"
      PDBName:          "TPCV3R3A"
      characterSet:     "AL32UTF8"
      memoryLimit:      "3120"

  # ----------------------------------------------------------------------------
  # Load passwords from passwords/oracle.yml which has the following variables:
  # * pw_all
  # * pw_sys
  # * pw_system
  # * pw_pdbadmin
  #
  # >>>>>>> This file is deliberately NOT included in the GIT repository <<<<<<<
  # ----------------------------------------------------------------------------
        
  - name:               "Load passwords"
    include_vars:
      file:             "passwords/oracle.yml"
    no_log:             true
  
  # ----------------------------------------------------------------------------
  # The Oracle 19C preinstallation RPM should only be installed once, even if
  #   a more newer version exists as the RPM creates users and does system
  #   configuration.
  # ----------------------------------------------------------------------------
  
  - name:               "Install Oracle Preinstallation RPM"
    yum:
      name:             oracle-database-preinstall-19c
      state:            present
    become:             yes
    become_user:        root
    
  - name:               "Create response file for silent installation"
    template:
      src:              db_install.rsp.j2
      dest:             "{{ response_file }}"
      mode:             0600
    become:             yes
    become_user:        oracle
    no_log:             true
      
  - name:               "Create directory for Installation Software"
    file:
      name:             "{{ db_installer_loc }}"
      group:            "{{ install_group }}"
      owner:            oracle
      state:            directory
    become:             yes
    become_user:        oracle

  - name:               "Extract the Oracle Software Installer"
    unarchive:
      creates:          "{{ db_installer_loc }}/runInstaller"
      dest:             "{{ db_installer_loc }}"
      group:            "{{ install_group }}"
      owner:            oracle
      remote_src:       yes
      src:              "{{ sw_archive }}"
    become:             yes
    become_user:        oracle
  
  - name:               "Install Oracle DB Software in Silent Mode"
    command:              
      argv:
      -                 "{{ db_installer_loc }}/runInstaller"
      -                 "-silent"
      -                 "-noconfig"
      -                 "-responseFile"
      -                 "{{ response_file }}"
      -                 "-waitforcompletion"
      -                 "-ignorePrereq"
      chdir:            "{{ db_installer_loc }}"
      creates:          "{{ oracle_home }}/*"
    register:           db_install_result
    become:             yes
    become_user:        oracle

  - name:               "Output from Install Oracle DB Software in Silent Mode"
    debug:
      var:              db_install_result.stdout_lines
      verbosity:        0
    when:               db_install_result is defined

  - name:               "Run orainstRoot.sh after Oracle Database Software Installation"
    command:
      argv:
      -                 "{{ oracle_vars.inventory_location }}/orainstRoot.sh"
    register:           orainstRoot
    when:               db_install_result.stdout is search('/orainstRoot.sh')
    become:             yes
    become_user:        root

  - name:               "Output from orainstRoot.sh script"
    debug:
      var:              orainstRoot.stdout_lines
      verbosity:        0
    when:               orainstRoot.stdout_lines is defined

  - name:               "Run configToolAllCommands after Oracle Client 12.1.0.2 Software Installation"
    command:
      argv:
      -                 "/bin/sh"
      -                 "{{ oracle_home }}/cfgtoollogs/configToolAllCommands"
    register:           configToolAllCommands
    when:               db_install_result.stdout is search('/cfgtoollogs/configToolAllCommands')
    become:             yes
    become_user:        oracle

  - name:               "Output from configToolAllCommands script"
    debug:
      var:              configToolAllCommands.stdout_lines
      verbosity:        0
    when:               configToolAllCommands.stdout_lines is defined

...
