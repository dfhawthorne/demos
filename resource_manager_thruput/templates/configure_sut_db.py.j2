#!/bin/python3
# ------------------------------------------------------------------------------
# Configures the database on the System Under Test (SUT) for use by HammerDB
# ------------------------------------------------------------------------------

import os
import cx_Oracle

os.environ['ORACLE_BASE'] = '{{ oracle_base }}'
os.environ['ORACLE_SID']  = '{{ SID }}'
os.environ['ORACLE_HOME'] = '{{ oracle_home }}'

# ------------------------------------------------------------------------------
# Connect to the correct container
# ------------------------------------------------------------------------------

conn   = cx_Oracle.connect("/", mode=cx_Oracle.SYSDBA)
cursor = conn.cursor()
cursor.execute("ALTER SESSION SET CONTAINER={{ PDBName }}")

# ------------------------------------------------------------------------------
# Check whether Local Undo is enabled
# ------------------------------------------------------------------------------

sql = """SELECT property_name, property_value 
FROM   database_properties 
WHERE  property_name = 'LOCAL_UNDO_ENABLED'"""

cursor.execute(sql)
(property_name, property_value) = cursor.fetchone()

if property_value != "TRUE":
    print(f"{property_name}={property_value}", file=sys.stderr)
    exit(1)

print("Local UNDO is enabled")

# ------------------------------------------------------------------------------
# Ensure that the database is in ARCHIVELOG mode
# This requires the change to be done in MOUNT mode
# ------------------------------------------------------------------------------

cursor.execute("SELECT log_mode FROM v$database")
(log_mode, ) = cursor.fetchone()
print(f'Database is in {log_mode} mode.')
if log_mode == "NOARCHIVELOG":
    cursor.execute("ALTER SESSION SET CONTAINER=CDB$ROOT")
    conn.shutdown(mode = cx_Oracle.DBSHUTDOWN_IMMEDIATE)
    cursor.execute("ALTER DATABASE CLOSE NORMAL")
    cursor.execute("ALTER DATABASE DISMOUNT")
    cursor.close()
    conn.shutdown(mode = cx_Oracle.DBSHUTDOWN_FINAL)
    conn.close()
    conn   = cx_Oracle.connect("/", mode=cx_Oracle.SYSDBA | cx_Oracle.PRELIM_AUTH)
    conn.startup()
    conn.close()
    conn   = cx_Oracle.connect("/", mode=cx_Oracle.SYSDBA)
    cursor = conn.cursor()
    cursor.execute("ALTER DATABASE MOUNT")
    cursor.execute("ALTER DATABASE ARCHIVELOG")
    cursor.execute("ALTER DATABASE OPEN")
    print('Database changed to ARCHIVELOG mode.')

# ------------------------------------------------------------------------------
# Define the required service name in the PDB to be used for testing
# -------------------------------------------------------------------------------

cursor.execute("ALTER SESSION SET CONTAINER={{ PDBName }}")
sut_service_network_name = '{{ SUT_SERVICE_NAME }}'.upper()
sut_service_name         = sut_service_network_name.split('.')[0]
sql = f"""SELECT network_name
  FROM dba_services
  WHERE name='{sut_service_name}'"""
cursor.execute(sql)
row = cursor.fetchone()
if cursor.rowcount == 0:
    print(f'Service {sut_service_name} is not defined')
    parms  = [
        sut_service_name,
        sut_service_network_name
    ]
    cursor.callproc('dbms_service.create_service', parms)
    print(f"Service {sut_service_name} created as {sut_service_network_name}")
    cursor.callproc('dbms_service.start_service', parms)
    cursor.execute("ALTER PLUGGABLE DATABASE {{ PDBName }} SAVE STATE")
    print(f'Service {sut_service_name} started')
else:
    print(f"Service {sut_service_name} is defined")

cursor.close()
conn.close()

exit(0)